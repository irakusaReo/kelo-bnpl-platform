version: '3.8'

services:
  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: kelo-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - kelo-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Go Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    container_name: kelo-backend
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - REDIS_URL=redis://redis:6379
      - PORT=8080
      - LOG_LEVEL=debug
      - BLOCKCHAIN_NETWORK=ethereum
      - ETHEREUM_RPC_URL=https://mainnet.infura.io/v3/YOUR-INFURA-PROJECT-ID
      - HEDERA_NETWORK=testnet
      - HEDERA_ACCOUNT_ID=0.0.12345
      - HEDERA_PRIVATE_KEY=your-hedera-private-key
    ports:
      - "8080:8080"
      - "8081:8081"  # Credit scoring API
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - kelo-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: go run ./cmd/api/main.go
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: kelo-frontend
    env_file:
      - .env
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8080
      - NEXT_PUBLIC_WS_URL=ws://localhost:8080
      # These are loaded from the .env file now
      - NEXT_PUBLIC_SUPABASE_URL=${SUPABASE_URL}
      - NEXT_PUBLIC_SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - kelo-network
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis Commander for Redis management
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: kelo-redis-commander
    environment:
      - REDIS_HOSTS=local:redis:6379
    ports:
      - "8082:8081"
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - kelo-network

  # Mailhog for email testing (development only)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: kelo-mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    networks:
      - kelo-network

volumes:
  redis_data:
    driver: local

networks:
  kelo-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16